<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancelar.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="btnGuardar.Text" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="lblCorral.Text" xml:space="preserve">
    <value>Corral:</value>
  </data>
  <data name="lblCorrales.Text" xml:space="preserve">
    <value>Corrales</value>
  </data>
  <data name="lblCorralesParaCalculo.Text" xml:space="preserve">
    <value>Corrales para cálculo de consumo</value>
  </data>
  <data name="lblFecha.Text" xml:space="preserve">
    <value>Fecha:</value>
  </data>
  <data name="lblFormula.Text" xml:space="preserve">
    <value>Fórmula:</value>
  </data>
  <data name="lblGroupBox.Text" xml:space="preserve">
    <value>Ingrese un corral de producción:</value>
  </data>
  <data name="lblKilogramosServidos.Text" xml:space="preserve">
    <value>Kilogramos servidos:</value>
  </data>
  <data name="lblLote.Text" xml:space="preserve">
    <value>Lote:</value>
  </data>
  <data name="lblTipoCorral.Text" xml:space="preserve">
    <value>Tipo de corral:</value>
  </data>
  <data name="lblTitulo.Text" xml:space="preserve">
    <value>Captura Manual De Consumo</value>
  </data>
  <data name="lblTituloProgress.Text" xml:space="preserve">
    <value>Calculando consumo por corral...</value>
  </data>
  <data name="mensajeCancelar" xml:space="preserve">
    <value>No se ha guardado la información, ¿Esta seguro de cancelar sin guardar la información capturada?</value>
  </data>
  <data name="mensajeCapturarCorral" xml:space="preserve">
    <value>Es necesario ingresar un corral para continuar.</value>
  </data>
  <data name="mensajeCorralNoCorrespondeAProduccion" xml:space="preserve">
    <value>El corral ingresado no corresponde a producción. Favor de verificar.</value>
  </data>
  <data name="mensajeCorralNoExite" xml:space="preserve">
    <value>El corral ingresado no existe. Favor de verificar.</value>
  </data>
  <data name="mensajeCorralNoTieneLoteActivo" xml:space="preserve">
    <value>El corral ingresado no tiene lote activo. Favor de verificar.</value>
  </data>
  <data name="mensajeCorralYaEstaEnLaLista" xml:space="preserve">
    <value>El corral ya se encuentra en la lista para cálculo. Favor de verificar.</value>
  </data>
  <data name="mensajeDatosEnBlanco" xml:space="preserve">
    <value>Existen datos obligatorios en blanco. Es necesario ingresarlos para continuar.</value>
  </data>
  <data name="mensajeErrorAlConsultarCabezas" xml:space="preserve">
    <value>Ocurrió un error al consultar el total de cabezas. Favor de verificar.</value>
  </data>
  <data name="mensajeErrorAlConsultarInventario" xml:space="preserve">
    <value>Ocurrió un error al consultar el Inventario. Favor de verificar.</value>
  </data>
  <data name="mensajeErrorAlConsultarLotes" xml:space="preserve">
    <value>Ocurrió un error al consultar los lotes del producto. Favor de verificar.</value>
  </data>
  <data name="mensajeErrorGenerarConsumo" xml:space="preserve">
    <value>Ocurrio un problema al generar la orden de reparto.</value>
  </data>
  <data name="mensajeErrorSession" xml:space="preserve">
    <value>Error de sesion.</value>
  </data>
  <data name="mensajeEsNecesarioSeleccionarCorral" xml:space="preserve">
    <value>Es necesario seleccionar por lo menos un corral para continuar.</value>
  </data>
  <data name="mensajeExito" xml:space="preserve">
    <value>Datos guardados con éxito.</value>
  </data>
  <data name="mensajeIngresarKilogramosServidos" xml:space="preserve">
    <value>Es necesario ingresar los kilogramos servidos.</value>
  </data>
  <data name="mensajeInsuficienteInventario" xml:space="preserve">
    <value>La fórmula no cuenta con la existencia necesaria. Favor de verificar.</value>
  </data>
  <data name="mensajeNoExistenCorrales" xml:space="preserve">
    <value>No es posible continuar. No existen corrales con lote activo. Favor de verificar.</value>
  </data>
  <data name="mensajeNoExistenCorralesDeEnfermeria" xml:space="preserve">
    <value>No es posible continuar. No existen corrales de enfermeria con lote activo. Favor de verificar.</value>
  </data>
  <data name="mensajeNoHaCapturadoCorrales" xml:space="preserve">
    <value>Es necesario agregar por lo menos un corral para continuar.</value>
  </data>
  <data name="mensajeNoHayExistenciaSuficiente" xml:space="preserve">
    <value>No hay existencia suficiente en almacen planta de alimentos.</value>
  </data>
  <data name="mensajeNoHayFormulas" xml:space="preserve">
    <value>No es posible continuar. No existen registros de fórmulas en el catálogo.</value>
  </data>
  <data name="mensajeNoHayLotes" xml:space="preserve">
    <value>No es posible continuar. No existen lotes para el producto seleccionado.</value>
  </data>
  <data name="mensajeNoHayTipoCorral" xml:space="preserve">
    <value>No es posible continuar. No existen registros de tipos de corral en el catálogo.</value>
  </data>
  <data name="mensajeSeleccionarCorrales" xml:space="preserve">
    <value>Es necesario agregar por lo menos un corral para continuar.</value>
  </data>
  <data name="mensajeSeleccionarFormula" xml:space="preserve">
    <value>Es necesario seleccionar una Fórmula.</value>
  </data>
  <data name="mensajeSeleccionarLote" xml:space="preserve">
    <value>Es necesario seleccionar un lote.</value>
  </data>
  <data name="mensajeSeleccionarTipoCorral" xml:space="preserve">
    <value>Es necesario seleccionar un tipo de corral.</value>
  </data>
</root>