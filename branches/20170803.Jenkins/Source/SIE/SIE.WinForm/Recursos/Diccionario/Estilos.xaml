<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
                    xmlns:avalondock="http://avalondock.codeplex.com"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:aux="clr-namespace:SIE.WinForm.Auxiliar"
                    xmlns:MessageBox="clr-namespace:SuKarne.Controls.MessageBox;assembly=SuKarne.Controls">
    <!-- Convertidores -->
    <aux:ConvertidorConteoLista2Visibility x:Key="conteoLista2Visibility" />
    
    <!-- Imagenes -->

    <BitmapImage x:Key="loading"
                 UriSource="../Image/loading.gif" />
    <BitmapImage x:Key="editIcon"
                 UriSource="../Image/Icon/pencil.png" />
    <BitmapImage x:Key="borrarIcon"
                 UriSource="../Image/Icon/delete.png" />
    <BitmapImage x:Key="skLogo"
                 UriSource="../../Imagenes/skLogo.png" />
    <BitmapImage x:Key="cerrar"
                 UriSource="../../Imagenes/Cerrar.png" />
    <BitmapImage x:Key="addIcon"
                 UriSource="../Image/Icon/add.png" />
    <BitmapImage x:Key="adelanteUnoIcon"
                 UriSource="../Image/Icon/adelanteUno.png" />
    <BitmapImage x:Key="adelanteTodosIcon"
                 UriSource="../Image/Icon/adelanteTodos.png" />
    <BitmapImage x:Key="atrasUnoIcon"
                 UriSource="../Image/Icon/atrasUno.png" />
    <BitmapImage x:Key="atrasTodosIcon"
                 UriSource="../Image/Icon/atrasTodos.png" />
    <BitmapImage x:Key="deleteIcon"
                 UriSource="../Image/Icon/delete.png" />
    <BitmapImage x:Key="crossIcon"
                 UriSource="../Image/Icon/cross.png" />
    <BitmapImage x:Key="findIcon"
                 UriSource="../Image/Icon/find.ico" />
    <BitmapImage x:Key="printIcon2"
                 UriSource="/Imagenes/printer32.png" />
    <BitmapImage x:Key="printIcon"
                 UriSource="/Imagenes/iconoprint.ico" />
    <BitmapImage x:Key="tableIcon"
                 UriSource="../Image/Icon/table_link.png" />
    <BitmapImage x:Key="subirIcon" UriSource="../../Recursos/Image/Icon/subir.png" />
    <BitmapImage x:Key="bajarIcon" UriSource="../../Recursos/Image/Icon/bajar.png" />
    <Style x:Key="tituloControl"
           TargetType="{x:Type Label}">
        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="Foreground"
                Value="white"></Setter>
        <Setter Property="Background"
                Value="#FF6A0D04"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Left"></Setter>

    </Style>
    <Style x:Key="botonCerrar"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="20" />
        <Setter Property="Height"
                Value="20" />
        <Setter Property="Margin"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
    </Style>

    <Style x:Key="botonAgregar"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="25" />
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Margin"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
    </Style>

    <Style x:Key="botonTraspaso"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="25" />
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Margin"
                Value="1" />

    </Style>

    <Style x:Key="groupBox"
           TargetType="{x:Type GroupBox}">
        <Setter Property="Margin"
                Value="8,4" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Padding"
                Value="5" />
    </Style>
    <!-- TextBox style -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Height"
                Value="22" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Width"
                Value="100" />
        
    </Style>

    <!-- Error de Controles  -->
    <Style x:Key="textBoxInError"
           TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                              Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>

        <Setter Property="Height"
                Value="22" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Width"
                Value="100" />

    </Style>

    <!-- Campos requeridos-->

    <Style x:Key="labelRequerido"
           TargetType="{x:Type Label}">
        <Setter Property="Foreground"
                Value="Red" />
        <Setter Property="FontWeight"
                Value="Bold" />
    </Style>

    <!-- DatePicker style -->
    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Width"
                Value="120" />
    </Style>

    <!-- Dock panel -->
    <Style TargetType="{x:Type avalondock:DockingManager}">
        <Setter Property="Background"
                Value="#DFE9F5" />
    </Style>

    <Style TargetType="{x:Type avalondock:LayoutDocumentTabItem}">
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="Padding"
                Value="0"></Setter>
        <Setter Property="Margin"
                Value="0"></Setter>
    </Style>

    <Style TargetType="{x:Type avalondock:LayoutDocumentControl}">
        <Setter Property="Background"
                Value="#F9F9F9"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="Padding"
                Value="0"></Setter>
        <Setter Property="Margin"
                Value="0"></Setter>
    </Style>

    <Style TargetType="{x:Type avalondock:LayoutDocumentPaneControl}">
        <Setter Property="Background"
                Value="Blue"></Setter>
        <Setter Property="Padding"
                Value="0"></Setter>
        <Setter Property="Margin"
                Value="0"></Setter>
    </Style>

    <Style TargetType="{x:Type avalondock:LayoutDocumentPaneGroupControl}">
        <Setter Property="Background"
                Value="#DFE9F5"></Setter>
        <Setter Property="Margin"
                Value="0"></Setter>
    </Style>

    <!-- Ribbon Menu -->
    <Style TargetType="{x:Type Ribbon:RibbonButton}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Width"
                Value="90" />
    </Style>

    <Style TargetType="{x:Type Ribbon:RibbonApplicationMenu}">
        <Setter Property="Visibility"
                Value="Hidden" />
        <Setter Property="Background"
                Value="DarkRed" />
        <Setter Property="Width"
                Value="0" />
        <Setter Property="FocusVisualStyle"
                Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
    </Style>

   

    <ControlTemplate x:Key="validationTemplate">
        <DockPanel>
            <TextBlock Foreground="Red"
                       FontSize="20">!</TextBlock>
            <AdornedElementPlaceholder />
        </DockPanel>
    </ControlTemplate>

    <!-- Controles Generales -->

    <Style x:Key="titulo"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Padding"
                Value="20"></Setter>
        <Setter Property="FontSize"
                Value="20"></Setter>
        <Setter Property="FontWeight"
                Value="Bold"></Setter>

    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="Height"
                Value="27"></Setter>
        <Setter Property="FontSize"
                Value="14"></Setter>
        <Setter Property="Foreground"
                Value="#000000"></Setter>
        <Setter Property="FontFamily"
                Value="Arial Narrow"></Setter>
    </Style>

    <Style x:Key="tituloEtiqueta"
           TargetType="{x:Type Label}">
        <Setter Property="Padding"
                Value="20,0,0,0"></Setter>
        <Setter Property="FontSize"
                Value="18"></Setter>
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="Foreground"
                Value="white"></Setter>
        <Setter Property="Background"
                Value="#FF6A0D04"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Stretch"></Setter>
        <Setter Property="Margin"
                Value="0,10,0,0"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>

    </Style>

    <Style TargetType="{x:Type UserControl}">
        <Setter Property="Height"
                Value="Auto"></Setter>
        <Setter Property="Width"
                Value="Auto"></Setter>
        <Setter Property="MinHeight"
                Value="500"></Setter>
        <Setter Property="MinWidth"
                Value="700"></Setter>
    </Style>

    <Style x:Key="regularBorder"
           TargetType="{x:Type Border}">
        <Setter Property="Margin"
                Value="20" />
        <Setter Property="BorderBrush"
                Value="DarkGray" />
        <Setter Property="BorderThickness"
                Value="1" />
    </Style>

    <Style x:Key="groupBoxBorder"
           TargetType="{x:Type Border}">
        <Setter Property="Margin"
                Value="8,4" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="CornerRadius"
                Value="4" />
        <Setter Property="Padding"
                Value="5" />
    </Style>

    <Style x:Key="iconButton"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="18" />
        <Setter Property="Height"
                Value="18" />
        <Setter Property="Margin"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
    </Style>
    <Style x:Key="BuscarIcono"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="22" />
        <Setter Property="Height"
                Value="22" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
    </Style>
    <Style x:Key="fieldLabel"
           TargetType="{x:Type Label}">
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="iconImage"
           TargetType="{x:Type Image}">
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Height"
                Value="Auto" />
        <Setter Property="Margin"
                Value="0" />
    </Style>


    <Style x:Key="NuclearButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2"
                                   Stroke="#60000000"
                                   StrokeThickness="1"
                                   StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="informacionEtiqueta"
           TargetType="{x:Type Label}">
        <Setter Property="FontSize"
                Value="15"></Setter>
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="Foreground"
                Value="#FF4E78C3"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Stretch"></Setter>
        <Setter Property="Margin"
                Value="0,5,0,0"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
    </Style>

    <Style x:Key="informacionEtiquetaNegro"
           TargetType="{x:Type Label}">
        <Setter Property="FontSize"
                Value="15"></Setter>
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="Foreground"
                Value="Black"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Stretch"></Setter>
        <Setter Property="Margin"
                Value="0,5,0,0"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
    </Style>

    <Style x:Key="informacionEtiquetaRojo"
           TargetType="{x:Type Label}">
        <Setter Property="FontSize"
                Value="15"></Setter>
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="Foreground"
                Value="#FFBD3442"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Stretch"></Setter>
        <Setter Property="Margin"
                Value="0,5,0,0"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
    </Style>

    <Style x:Key="DisplayLabelRojo"
           TargetType="{x:Type Label}">
        <Setter Property="Height"
                Value="Auto" />
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="Margin"
                Value="0,13" />
        <Setter Property="Foreground"
                Value="#FFAD0415" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Background"
                Value="#FF0A0505" />

    </Style>
    <Style x:Key="DisplayLabelNegro"
           TargetType="{x:Type Label}">
        <Setter Property="Height"
                Value="Auto" />
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="Margin"
                Value="0,13" />

    </Style>

    <Style x:Key="GeneradosLabel"
           TargetType="{x:Type Label}">
        <Setter Property="Background"
                Value="#FFAD0415" />
        <Setter Property="Foreground"
                Value="#FFFFFFFF" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="24" />

    </Style>

    <!-- Colores para gradientes -->

    <Color x:Key="WhiteColor">#FFFFFFFF</Color>
    <Color x:Key="NormalBrushGradient1">#FFF1BCBE</Color>
    <Color x:Key="NormalBrushGradient2">#FFCE6865</Color>
    <Color x:Key="NormalBrushGradient3">#FFAF231E</Color>
    <Color x:Key="NormalBrushGradient4">#FF601818</Color>

    <Color x:Key="NormalBorderBrushGradient1">#FFBBBBBB</Color>
    <Color x:Key="NormalBorderBrushGradient2">#FF737373</Color>
    <Color x:Key="NormalBorderBrushGradient3">#FF646464</Color>
    <Color x:Key="NormalBorderBrushGradient4">#FF000000</Color>

    <Color x:Key="ShadeBrushGradient1">#FF62676A</Color>
    <Color x:Key="ShadeBrushGradient2">#FFD1D4D6</Color>
    <Color x:Key="ShadeBrushGradient3">#FFFFFFFF</Color>

    <Color x:Key="SelectedBackgroundGradient1">#FFBBBBBB</Color>
    <Color x:Key="SelectedBackgroundGradient2">#FF737373</Color>
    <Color x:Key="SelectedBackgroundGradient3">#FF646464</Color>
    <Color x:Key="SelectedBackgroundGradient4">#FFA1A1A1</Color>

    <!-- Gradientes -->
    <LinearGradientBrush x:Key="NormalBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="{StaticResource NormalBrushGradient1}"
                      Offset="0" />
        <GradientStop Color="{StaticResource NormalBrushGradient2}"
                      Offset="0.41800001263618469" />
        <GradientStop Color="{StaticResource NormalBrushGradient3}"
                      Offset="0.418" />
        <GradientStop Color="{StaticResource NormalBrushGradient4}"
                      Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalBorderBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="{StaticResource NormalBorderBrushGradient1}" />
        <GradientStop Color="{StaticResource NormalBorderBrushGradient2}"
                      Offset="0.38" />
        <GradientStop Color="{StaticResource NormalBorderBrushGradient3}"
                      Offset="0.384" />
        <GradientStop Color="{StaticResource NormalBorderBrushGradient4}"
                      Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ShadeBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="{StaticResource ShadeBrushGradient2}"
                      Offset="0" />
        <GradientStop Color="{StaticResource ShadeBrushGradient3}"
                      Offset="0.1" />
        <GradientStop Color="{StaticResource ShadeBrushGradient3}"
                      Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <GradientStop Color="#777"
                      Offset="0.0" />
        <GradientStop Color="#000"
                      Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DisabledBackgroundBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" />
        <GradientStop Color="#FF62676A"
                      Offset="1" />
        <GradientStop Color="#FFD1D4D6"
                      Offset="0.41800001263618469" />
        <GradientStop Color="#FFA9AFB5"
                      Offset="0.425" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SelectedBackgroundBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="{StaticResource SelectedBackgroundGradient1}" />
        <GradientStop Color="{StaticResource SelectedBackgroundGradient2}"
                      Offset="0.38" />
        <GradientStop Color="{StaticResource SelectedBackgroundGradient3}"
                      Offset="0.384" />
        <GradientStop Color="{StaticResource SelectedBackgroundGradient4}"
                      Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledBorderBrush"
                     Color="#AAA" />

    <SolidColorBrush x:Key="DisabledForegroundBrush"
                     Color="#FF636363" />

    <SolidColorBrush x:Key="TextBrush"
                     Color="#FFFFFFFF" />

    <SolidColorBrush x:Key="GlyphBrush"
                     Color="White" />

    <RadialGradientBrush x:Key="HoverBrush">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5"
                                CenterY="0.5"
                                ScaleX="1.804"
                                ScaleY="0.743" />
                <SkewTransform CenterX="0.5"
                               CenterY="0.5" />
                <RotateTransform CenterX="0.5"
                                 CenterY="0.5" />
                <TranslateTransform Y="0.47999998927116394" />
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="#FFFFC398"
                      Offset="0.209" />
        <GradientStop Color="#00FFB598"
                      Offset="1" />
        <GradientStop Color="#FFFFFFFF"
                      Offset="0" />
    </RadialGradientBrush>

    <!-- Templates -->
    <ControlTemplate x:Key="ButtonTemplate"
                     TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="Hover"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
                                          Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="Hover"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                          Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="Background"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
                                          Value="0.6" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="Background"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                          Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="FocusVisualElement"
                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000"
                                            Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="FocusVisualElement"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
                                          Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="FocusVisualElement"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                          Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>

        <Grid x:Name="Grid">
            <Border x:Name="Background"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="2,2,2,2"
                    CornerRadius="2,2,2,2">
                <Border x:Name="Hover"
                        Background="{StaticResource HoverBrush}"
                        CornerRadius="1,1,1,1"
                        Height="Auto"
                        Width="Auto"
                        Opacity="0" />
            </Border>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True" />
            <Border x:Name="FocusVisualElement"
                    IsHitTestVisible="false"
                    BorderBrush="{StaticResource HoverBrush}"
                    BorderThickness="2,2,2,2"
                    CornerRadius="2,2,2,2"
                    Opacity="0" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefault"
                     Value="True">
                <Setter Property="BorderBrush"
                        TargetName="Background"
                        Value="{DynamicResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard"
                                     Storyboard="{StaticResource FocusedOff}" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="true" />
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        Value="{DynamicResource DisabledBackgroundBrush}"
                        TargetName="Background" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource DisabledBorderBrush}"
                        TargetName="Background" />
                <Setter Property="Foreground"
                        Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid>
            <ToggleButton Grid.Column="2"
                          Template="{DynamicResource ComboBoxToggleButton}"
                          x:Name="ToggleButton"
                          Focusable="false"
                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          ClickMode="Press" />
            <ContentPresenter HorizontalAlignment="Left"
                              Margin="3,3,23,3"
                              x:Name="ContentSite"
                              VerticalAlignment="Center"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              IsHitTestVisible="False" />
            <TextBox Visibility="Hidden"
                     Template="{DynamicResource ComboBoxTextBox}"
                     HorizontalAlignment="Left"
                     Margin="3,3,23,3"
                     x:Name="PART_EditableTextBox"
                     Style="{x:Null}"
                     VerticalAlignment="Center"
                     Focusable="True"
                     Background="White"
                     IsReadOnly="{TemplateBinding IsReadOnly}" />

            <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="Bottom"
                   x:Name="Popup"
                   Focusable="False"
                   AllowsTransparency="True"
                   PopupAnimation="Fade">
                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      MinWidth="{TemplateBinding ActualWidth}"
                      x:Name="DropDown"
                      SnapsToDevicePixels="True">
                    <Border x:Name="DropDownBorder"
                            Background="{DynamicResource ShadeBrush}"
                            BorderBrush="{DynamicResource SolidBorderBrush}"
                            BorderThickness="1" />
                    <ScrollViewer Margin="4,6,4,6"
                                  SnapsToDevicePixels="True"
                                  HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Auto"
                                  CanContentScroll="True">

                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Contained" />

                    </ScrollViewer>
                </Grid>
            </Popup>


        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter Property="MinHeight"
                        Value="95"
                        TargetName="DropDownBorder" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsGrouping"
                     Value="true">
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </Trigger>
            <Trigger Property="AllowsTransparency"
                     SourceName="Popup"
                     Value="true">
                <Setter Property="Margin"
                        Value="0,0,0,0"
                        TargetName="DropDownBorder" />
                <Setter Property="CornerRadius"
                        TargetName="DropDownBorder"
                        Value="3,3,3,3" />
            </Trigger>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Visibility"
                        Value="Visible"
                        TargetName="PART_EditableTextBox" />
                <Setter Property="Visibility"
                        Value="Hidden"
                        TargetName="ContentSite" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxToggleButton"
                     TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="HoverRectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
                                          Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="HoverRectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                          Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="Rectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
                                          Value="0.6" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="Rectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                          Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2"
                       HorizontalAlignment="Stretch"
                       x:Name="Rectangle"
                       VerticalAlignment="Stretch"
                       Width="Auto"
                       Height="Auto"
                       RadiusX="3"
                       RadiusY="3"
                       Fill="{DynamicResource NormalBrush}"
                       Stroke="{DynamicResource NormalBorderBrush}"
                       StrokeThickness="2" />
            <Rectangle HorizontalAlignment="Stretch"
                       x:Name="HoverRectangle"
                       VerticalAlignment="Stretch"
                       Width="Auto"
                       Height="Auto"
                       RadiusX="3"
                       RadiusY="3"
                       Fill="{DynamicResource HoverBrush}"
                       Stroke="{x:Null}"
                       StrokeThickness="2"
                       Grid.ColumnSpan="2"
                       Opacity="0"
                       Grid.Column="1"
                       Margin="0,2,2,2" />
            <Rectangle Grid.Column="0"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Width="Auto"
                       Height="Auto"
                       RadiusX="2"
                       RadiusY="2"
                       Stroke="{x:Null}"
                       Margin="2,2,0,2">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                </Rectangle.Fill>
            </Rectangle>
            <Path Grid.Column="1"
                  HorizontalAlignment="Center"
                  x:Name="Arrow"
                  VerticalAlignment="Center"
                  Fill="{DynamicResource GlyphBrush}"
                  Data="M 0 0 L 4 4 L 8 0 Z"
                  d:LayoutOverrides="Width, Height"
                  Margin="-2,2,0,0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"
                                     x:Name="HoverOff_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"
                                     x:Name="PressedOff_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"
                                     x:Name="PressedOn_BeginStoryboard" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Fill"
                        Value="{DynamicResource DisabledBackgroundBrush}"
                        TargetName="Rectangle" />
                <Setter Property="Stroke"
                        Value="{DynamicResource DisabledBorderBrush}"
                        TargetName="Rectangle" />
                <Setter Property="Foreground"
                        Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Fill"
                        Value="{DynamicResource DisabledForegroundBrush}"
                        TargetName="Arrow" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <!-- Button style -->
    <Style TargetType="{x:Type Button}"
           BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle"
                Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background"
                Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template"
                Value="{DynamicResource ButtonTemplate}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Width"
                Value="80" />
        <Setter Property="Height"
                Value="23" />
        <Setter Property="TextBlock.TextWrapping"
                Value="Wrap" />
    </Style>

    <!-- ComboBox style -->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="Template"
                Value="{DynamicResource ComboBoxTemplate}" />
        <Setter Property="Height"
                Value="23" />
    </Style>

    <Style x:Key="extendedScrollViewer"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Height"
                Value="Auto" />
        <Setter Property="Margin"
                Value="20" />
    </Style>

    <Style d:IsControlPart="True"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="SelectedBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="SelectedBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                                      Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                                      Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="true"
                          Margin="0,1,0,1">
                        <Border x:Name="Border"
                                Background="WhiteSmoke"
                                BorderBrush="Black"
                                BorderThickness="0" />
                        <Border x:Name="SelectedBorder"
                                Background="Silver"
                                BorderThickness="1"
                                Opacity="0" />
                        <Border x:Name="HoverBorder"
                                Background="Silver"
                                BorderThickness="1"
                                Opacity="0" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="5,2,0,2" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"
                                                 x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"
                                                 x:Name="HoverOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsHighlighted"
                                 Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}"
                                                 x:Name="SelectedOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}"
                                                 x:Name="SelectedOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background"
                Value="{DynamicResource SelectedBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="Black" />
    </Style>

    <!-- DataGrid style -->
    <LinearGradientBrush x:Key="headerDataGridColor"
                         StartPoint="0.5,0"
                         EndPoint="0.5,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="{StaticResource NormalBrushGradient1}"
                              Offset="0" />
                <GradientStop Color="{StaticResource NormalBrushGradient2}"
                              Offset="0.41800001263618469" />
                <GradientStop Color="{StaticResource NormalBrushGradient3}"
                              Offset="0.418" />
                <GradientStop Color="{StaticResource NormalBrushGradient4}"
                              Offset="1" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background"
                Value="{StaticResource headerDataGridColor}" />
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="SeparatorBrush"
                Value="white" />
        <Setter Property="BorderThickness"
                Value="0 0 1 0" />
        <Setter Property="BorderBrush"
                Value="White" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="Margin"
                Value="20,17,20,0" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="RowBackground"
                Value="#FDF1F7" />
        <Setter Property="AlternatingRowBackground"
                Value="White" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="CanUserResizeRows"
                Value="false" />
        <Setter Property="CanUserReorderColumns"
                Value="false" />
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="#FEE4E5" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="BorderThickness"
                                    Value="0"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="BorderThickness"
                                    Value="0"></Setter>
                            <Setter Property="Background"
                                    Value="#FFADAE" />
                            <Setter Property="Foreground"
                                    Value="Black"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MessageBox:SkMessageBoxControl}">
        <Setter Property="Height"
                Value="185" />
        <Setter Property="Width"
                Value="450" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MessageBox:SkMessageBoxControl}">
                    <Grid x:Name="LayoutRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0*" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="0*" />
                        </Grid.ColumnDefinitions>
                        <Grid Margin="8,8,40,20"
                              Grid.Row="1">
                            <Rectangle Fill="#FFFDFDFD"
                                       Stroke="Gray"
                                       RadiusY="7.5"
                                       RadiusX="7.5"
                                       StrokeThickness="1.5"
                                       d:LayoutOverrides="VerticalAlignment"
                                       Height="Auto"
                                       Width="Auto"
                                       Margin="0,0,-14,0">
                                <Rectangle.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                         StartPoint="0.5,0">
                                        <GradientStop Color="#FF707BAD"
                                                      Offset="0" />
                                        <GradientStop Color="#FF56639B"
                                                      Offset="0.66" />
                                    </LinearGradientBrush>
                                </Rectangle.OpacityMask>
                                <Rectangle.Effect>
                                    <BlurEffect RenderingBias="Quality"
                                                Radius="8" />
                                </Rectangle.Effect>
                            </Rectangle>
                            <Rectangle Fill="WhiteSmoke"
                                       Margin="3,2,-11,2"
                                       RadiusY="7.5"
                                       RadiusX="7.5"
                                       Stroke="#5D699F"
                                       d:LayoutOverrides="GridBox">
                                <Rectangle.Effect>
                                    <DropShadowEffect Color="Gray"
                                                      BlurRadius="6"
                                                      RenderingBias="Quality" />
                                </Rectangle.Effect>
                            </Rectangle>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding MessageImageSource}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Height="48"
                                       Width="48"
                                       Margin="21,25,0,50" />
                                <TextBlock Text="{Binding Message}"
                                           HorizontalAlignment="{Binding ContentTextAlignment}"
                                           Style="{DynamicResource textBlockMensaje}" />
                            </StackPanel>
                            <Grid HorizontalAlignment="Right"
                                  Height="35.267"
                                  Margin="0,0,11,18"
                                  VerticalAlignment="Bottom"
                                  Width="Auto">
                                <StackPanel Orientation="Horizontal"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Right"
                                            Margin="0 0 5 0">
                                    <Button Content="_Si"
                                            Visibility="{Binding YesNoVisibility}"
                                            Command="{Binding YesCommand}"
                                            IsDefault="{Binding IsYesDefault}"
                                            Margin="5 5 5 5"
                                            Height="24"
                                            Width="80" />
                                    <Button Content="_No"
                                            Visibility="{Binding YesNoVisibility}"
                                            Command="{Binding NoCommand}"
                                            IsDefault="{Binding IsNoDefault}"
                                            Margin="5 5 5 5"
                                            Height="24"
                                            Width="80" />
                                    <Button Content="_Aceptar"
                                            Visibility="{Binding OkVisibility}"
                                            Command="{Binding OkCommand}"
                                            IsDefault="{Binding IsOkDefault}"
                                            Margin="5 5 5 5"
                                            Height="24"
                                            Width="80" />
                                    <Button Content="_Cancelar"
                                            Visibility="{Binding CancelVisibility}"
                                            Command="{Binding CancelCommand}"
                                            IsDefault="{Binding IsCancelDefault}"
                                            Margin="5 5 5 5"
                                            Height="24"
                                            Width="80" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="textBlockMensaje"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground"
                Value="#FF000000" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontFamily"
                Value="Arial" />
        <Setter Property="TextWrapping"
                Value="Wrap" />
        <Setter Property="TextAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="25 40 0 0" />
        <Setter Property="RenderTransformOrigin"
                Value="3.316,2.317" />
        <Setter Property="Height"
                Value="50" />
        <Setter Property="Width"
                Value="275" />
    </Style>
    <!--Control colors.-->

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Style TargetType="CalendarDayButton"
           x:Key="CalendarDayButtonStyle">
        <Setter Property="MinWidth"
                Value="4" />
        <Setter Property="MinHeight"
                Value="4" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="NormalText"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".35"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".75"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).
                      (SolidColorBrush.Color)"
                                                        To="#FF777777" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="RegularDay" />
                                <VisualState Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TodayBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                        <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).
                      (SolidColorBrush.Color)"
                                                        To="#FFFFFFFF" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="NormalDay" />
                                <VisualState Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="Blackout"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="TodayBackground"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="SelectedBackground"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Rectangle x:Name="HighlightBackground"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource ControlMouseOverColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="NormalText"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="5,1,5,1">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="#FF333333" />
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Path x:Name="Blackout"
                              Opacity="0"
                              Margin="3"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              RenderTransformOrigin="0.5,0.5"
                              Fill="#FF000000"
                              Stretch="Fill"
                              Data="M8.1772461,11.029181 L10.433105,
                  11.029181 L11.700684,12.801641 L12.973633,
                  11.029181 L15.191895,11.029181 L12.844727,
                  13.999395 L15.21875,17.060919 L12.962891,
                  17.060919 L11.673828,15.256231 L10.352539,
                  17.060919 L8.1396484,17.060919 L10.519043,
                  14.042364 z" />
                        <Rectangle x:Name="DayButtonFocusVisual"
                                   Visibility="Collapsed"
                                   IsHitTestVisible="false"
                                   RadiusX="1"
                                   RadiusY="1">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Stroke>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style for the months of a year and years of a decade.-->
    <Style TargetType="CalendarButton"
           x:Key="CalendarButtonStyle">
        <Setter Property="MinWidth"
                Value="25" />
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".75"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).
                      (SolidColorBrush.Color)"
                                                        To="#FF777777" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="CalendarButtonFocusVisual"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="SelectedBackground"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="Background"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="NormalText"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="1,0,1,1">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="#FF333333" />
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Rectangle x:Name="CalendarButtonFocusVisual"
                                   Visibility="Collapsed"
                                   IsHitTestVisible="false"
                                   RadiusX="1"
                                   RadiusY="1">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Stroke>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlMediumColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--Button to go to the previous month or year.-->
    <ControlTemplate x:Key="PreviousButtonTemplate"
                     TargetType="{x:Type Button}">
        <Grid Cursor="Hand">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="path"
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            To="{DynamicResource GlyphMouseOver}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To=".5"
                                             Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                             Storyboard.TargetName="path" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--<Rectangle Fill="Transparent" Opacity="1" Stretch="Fill"/>-->
            <Grid  Background="Transparent">
                <Path x:Name="path"
                      Margin="6,-6,0,0"
                      Stretch="Fill"
                      HorizontalAlignment="Left"
                      Height="10"
                      VerticalAlignment="Center"
                      Width="6"
                      Data="M288.75,232.25 L288.75,240.625 L283,236.625 z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
            </Grid>
        </Grid>
    </ControlTemplate>

    <!--Button to go to the next month or year.-->
    <ControlTemplate x:Key="NextButtonTemplate"
                     TargetType="{x:Type Button}">
        <Grid Cursor="Hand">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            To="{StaticResource GlyphMouseOver}"
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="path" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To=".5"
                                             Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                             Storyboard.TargetName="path" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--<Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill"/>-->
            <Grid Background="Transparent">
                <Path x:Name="path"
                      Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                      HorizontalAlignment="Right"
                      Height="10"
                      Margin="0,-6,6,0"
                      Stretch="Fill"
                      VerticalAlignment="Center"
                      Width="6">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
            </Grid>
        </Grid>
    </ControlTemplate>

    <!--Button to go up a level to the year or decade.-->
    <ControlTemplate x:Key="HeaderButtonTemplate"
                     TargetType="{x:Type Button}">
        <Grid Cursor="Hand">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            To="{DynamicResource GlyphMouseOver}"
                                            Storyboard.TargetProperty="(TextElement.Foreground).
                (SolidColorBrush.Color)"
                                            Storyboard.TargetName="buttonContent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To=".5"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="buttonContent" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="buttonContent"
                              Margin="1,4,1,9"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}"
                              TextElement.Foreground="#FF333333"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="CalendarItemStyle"
           TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin"
                Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Foreground="#FF333333"
                                       FontWeight="Bold"
                                       FontSize="9.5"
                                       FontFamily="Verdana"
                                       Margin="0,6,0,6"
                                       Text="{Binding}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor"
                                             Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="1">
                            <Border BorderBrush="#FFFFFFFF"
                                    BorderThickness="2"
                                    CornerRadius="1">
                                <Grid>
                                    <Grid.Resources>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="150" />
                                        <ColumnDefinition Width="10" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Button x:Name="PART_PreviousButton"
                                            Template="{StaticResource PreviousButtonTemplate}"
                                            Focusable="False"
                                            HorizontalAlignment="Left"
                                            Grid.Column="0"
                                            Grid.Row="0"
                                            Height="20"
                                            Width="10"
                                            VerticalAlignment="Center" />
                                    <Button x:Name="PART_HeaderButton"
                                            FontWeight="Bold"
                                            Focusable="False"
                                            FontSize="10"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Grid.Column="1"
                                            Grid.Row="0"
                                            Template="{StaticResource HeaderButtonTemplate}"
                                            Width="150"
                                            Height="25" />
                                    <Button x:Name="PART_NextButton"
                                            Focusable="False"
                                            HorizontalAlignment="Right"
                                            Grid.Column="2"
                                            Grid.Row="0"
                                            Template="{StaticResource NextButtonTemplate}"
                                            Height="20"
                                            Width="10"
                                            VerticalAlignment="Center" />
                                    <Grid x:Name="PART_MonthView"
                                          Visibility="Visible"
                                          Grid.ColumnSpan="3"
                                          Grid.Row="1"
                                          Margin="6,-1,6,6"
                                          HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid x:Name="PART_YearView"
                                          Visibility="Hidden"
                                          Grid.ColumnSpan="3"
                                          Grid.Row="1"
                                          HorizontalAlignment="Center"
                                          Margin="6,-3,7,6">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle x:Name="PART_DisabledVisual"
                                   Fill="{StaticResource DisabledColor}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2"
                                   Stretch="Fill"
                                   Stroke="{StaticResource DisabledColor}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Visibility"
                                    TargetName="PART_DisabledVisual"
                                    Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, 
              RelativeSource={RelativeSource FindAncestor, 
              AncestorType={x:Type Calendar}}}"
                                     Value="Year">
                            <Setter Property="Visibility"
                                    TargetName="PART_MonthView"
                                    Value="Hidden" />
                            <Setter Property="Visibility"
                                    TargetName="PART_YearView"
                                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, 
              RelativeSource={RelativeSource FindAncestor, 
              AncestorType={x:Type Calendar}}}"
                                     Value="Decade">
                            <Setter Property="Visibility"
                                    TargetName="PART_MonthView"
                                    Value="Hidden" />
                            <Setter Property="Visibility"
                                    TargetName="PART_YearView"
                                    Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Calendar}">
        <Setter Property="CalendarButtonStyle"
                Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="CalendarDayButtonStyle"
                Value="{StaticResource CalendarDayButtonStyle}" />
        <Setter Property="CalendarItemStyle"
                Value="{StaticResource CalendarItemStyle}" />
        <Setter Property="Foreground"
                Value="#FF333333" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
                                     StartPoint="0.5,0">

                    <!--The first two gradient stops specifies the background for 
            the calendar's heading and navigation buttons.-->
                    <GradientStop Color="{DynamicResource HeaderTopColor}"
                                  Offset="0" />
                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                                  Offset="0.16" />

                    <!--The next gradient stop specifies the background for 
            the calendar area.-->
                    <GradientStop Color="{DynamicResource ControlLightColor}"
                                  Offset="0.16" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1"
                                     StartPoint="0,0">
                    <GradientStop Color="{DynamicResource BorderLightColor}"
                                  Offset="0" />
                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root"
                                HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{TemplateBinding Background}"
                                      Style="{TemplateBinding CalendarItemStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DatePickerCalendarStyle"
           TargetType="{x:Type Calendar}"
           BasedOn="{StaticResource {x:Type Calendar}}" />

    <!--The template for the button that displays the calendar.-->

    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="IsTodayHighlighted"
                Value="True" />
        <Setter Property="SelectedDateFormat"
                Value="Short" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="BorderThickness"
                Value="1" />
        <!--Set CalendarStyle to DatePickerCalendarStyle.-->
        <Setter Property="CalendarStyle"
                Value="{DynamicResource DatePickerCalendarStyle}" />

    </Style>

    <Style TargetType="{x:Type DatePicker}"
           x:Key="dtp">
        <Setter Property="Height"
                Value="24" />
        <Setter Property="Margin"
                Value="0,6,6,5" />
        <Setter Property="IsEnabled"
                Value="False" />
        <Setter Property="Width"
                Value="155" />

    </Style>

    <!--Separator style-->
    <Style TargetType="{x:Type Separator}"
           x:Key="spt">
        <Setter Property="Height"
                Value="12" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="-1,29,1,0" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Width"
                Value="302" />

    </Style>


    <!--TabControl style-->
    <Style TargetType="{x:Type TabControl}"
           BasedOn="{x:Null}">
        <Setter Property="Background"
                Value="White" />

        <Setter Property="BorderBrush"
                Value="Gainsboro" />

        <Setter Property="BorderThickness"
                Value="1" />

        <!--<Setter Property="Margin"
                Value="10" />-->
    </Style>
    <Style TargetType="ToggleButton">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DefaultPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#AA0000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
										                               Storyboard.TargetName="DefaultPath"
										                               Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
										                               Storyboard.TargetName="CheckedPath"
										                               Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckedPath" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#CCAA0000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter"
						                  Margin="{TemplateBinding Padding}"
						                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						                  Content="{TemplateBinding Content}"
						                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Path x:Name="DefaultPath"
						      VerticalAlignment="Top"
						      Data="M0,0 14,7 0,14 Z"
						      Fill="Gray"
						      Stretch="Fill" />
                        <Path x:Name="CheckedPath"
						      VerticalAlignment="Top"
						      Data="M0,0 14,0 7,14 Z"
						      Fill="LightGray"
						      Stretch="Fill"
						      Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TabItem style-->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border"
                            BorderThickness="1,1,1,0"
                            BorderBrush="Gainsboro"
                            CornerRadius="4,4,0,0"
                            Margin="2,0">
                        <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="10,2" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="LightSkyBlue" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="GhostWhite" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- TreeView -->
    <Style x:Key="etiquetaBold"
           TargetType="{x:Type Label}">
        <Setter Property="FontWeight"
                Value="Bold" />
    </Style>

    <Style TargetType="{x:Type TreeViewItem}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Background"
                        Value="#FEE4E5" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="true">
                <Setter Property="BorderThickness"
                        Value="0"></Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="TreeViewItem.IsExpanded"
                Value="True" />
    </Style>

    <Style x:Key="paginadorButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
    </Style>


</ResourceDictionary>